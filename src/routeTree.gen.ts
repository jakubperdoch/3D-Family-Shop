/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TrainingsRouteImport } from './routes/trainings'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as ModelingRouteImport } from './routes/modeling'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as CartRouteImport } from './routes/cart'
import { Route as CalculatorRouteImport } from './routes/calculator'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductsProductRouteImport } from './routes/products_/$product'
import { Route as CollectionsCollectionRouteImport } from './routes/collections_/$collection'

const TrainingsRoute = TrainingsRouteImport.update({
  id: '/trainings',
  path: '/trainings',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const ModelingRoute = ModelingRouteImport.update({
  id: '/modeling',
  path: '/modeling',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const CalculatorRoute = CalculatorRouteImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsProductRoute = ProductsProductRouteImport.update({
  id: '/products_/$product',
  path: '/products/$product',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsCollectionRoute = CollectionsCollectionRouteImport.update({
  id: '/collections_/$collection',
  path: '/collections/$collection',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/cart': typeof CartRoute
  '/gallery': typeof GalleryRoute
  '/modeling': typeof ModelingRoute
  '/profile': typeof ProfileRoute
  '/trainings': typeof TrainingsRoute
  '/collections/$collection': typeof CollectionsCollectionRoute
  '/products/$product': typeof ProductsProductRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/cart': typeof CartRoute
  '/gallery': typeof GalleryRoute
  '/modeling': typeof ModelingRoute
  '/profile': typeof ProfileRoute
  '/trainings': typeof TrainingsRoute
  '/collections/$collection': typeof CollectionsCollectionRoute
  '/products/$product': typeof ProductsProductRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/cart': typeof CartRoute
  '/gallery': typeof GalleryRoute
  '/modeling': typeof ModelingRoute
  '/profile': typeof ProfileRoute
  '/trainings': typeof TrainingsRoute
  '/collections_/$collection': typeof CollectionsCollectionRoute
  '/products_/$product': typeof ProductsProductRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculator'
    | '/cart'
    | '/gallery'
    | '/modeling'
    | '/profile'
    | '/trainings'
    | '/collections/$collection'
    | '/products/$product'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calculator'
    | '/cart'
    | '/gallery'
    | '/modeling'
    | '/profile'
    | '/trainings'
    | '/collections/$collection'
    | '/products/$product'
  id:
    | '__root__'
    | '/'
    | '/calculator'
    | '/cart'
    | '/gallery'
    | '/modeling'
    | '/profile'
    | '/trainings'
    | '/collections_/$collection'
    | '/products_/$product'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorRoute: typeof CalculatorRoute
  CartRoute: typeof CartRoute
  GalleryRoute: typeof GalleryRoute
  ModelingRoute: typeof ModelingRoute
  ProfileRoute: typeof ProfileRoute
  TrainingsRoute: typeof TrainingsRoute
  CollectionsCollectionRoute: typeof CollectionsCollectionRoute
  ProductsProductRoute: typeof ProductsProductRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/trainings': {
      id: '/trainings'
      path: '/trainings'
      fullPath: '/trainings'
      preLoaderRoute: typeof TrainingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/modeling': {
      id: '/modeling'
      path: '/modeling'
      fullPath: '/modeling'
      preLoaderRoute: typeof ModelingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products_/$product': {
      id: '/products_/$product'
      path: '/products/$product'
      fullPath: '/products/$product'
      preLoaderRoute: typeof ProductsProductRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections_/$collection': {
      id: '/collections_/$collection'
      path: '/collections/$collection'
      fullPath: '/collections/$collection'
      preLoaderRoute: typeof CollectionsCollectionRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorRoute: CalculatorRoute,
  CartRoute: CartRoute,
  GalleryRoute: GalleryRoute,
  ModelingRoute: ModelingRoute,
  ProfileRoute: ProfileRoute,
  TrainingsRoute: TrainingsRoute,
  CollectionsCollectionRoute: CollectionsCollectionRoute,
  ProductsProductRoute: ProductsProductRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
